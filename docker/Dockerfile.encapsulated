# Use an NVIDIA CUDA base image with CUDNN for TensorFlow compatibility
FROM nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

# Install Miniconda for Conda environment management and essential tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    curl \
    ca-certificates \
    build-essential \
    git \
    netcat \
    python3.10 \
    python3.10-venv \
    python3.10-distutils \
    && rm -rf /var/lib/apt/lists/*

# Install Miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /miniconda.sh && \
    bash /miniconda.sh -b -p /opt/conda && \
    rm /miniconda.sh && \
    /opt/conda/bin/conda clean --all --yes && \
    ln -s /opt/conda/bin/conda /usr/local/bin/conda

# Set environment variables for CUDA and GPU support
ENV CUDA_HOME=/usr/local/cuda
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
ENV PATH=/usr/local/cuda/bin:/opt/conda/bin:$PATH

# Copy environment.yml to container
COPY environment.yml /app/environment.yml

# Create and activate the Conda environment from environment.yml
RUN conda env create -f /app/environment.yml && conda clean --all --yes

# Configure shell to use the Conda environment by default
SHELL ["conda", "run", "-n", "senta", "/bin/bash", "-c"]

# Set working directory and copy application files
WORKDIR /app
COPY config /app/config
COPY models /app/models
COPY src /app/src
COPY static /app/static
COPY tests /app/tests
COPY pytest.ini /app/pytest.ini
COPY start_encapsulated.sh /app/start_encapsulated.sh

# Make entrypoint script executable
RUN chmod +x /app/start_encapsulated.sh

# Expose FastAPI port
EXPOSE 9001

# Define entrypoint to execute start script
ENTRYPOINT ["/app/start_encapsulated.sh"]
